#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# ADD SWAP
#=================================================

if [ "${PACKAGE_CHECK_EXEC:-0}" -ne 1 ]; then
    ynh_script_progression --message="Adding swap..." --weight=1
    ynh_add_swap --size=$swap_needed
fi

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=1

ynh_restore_file --origin_path="$install_dir/$appname"
ynh_restore_file --origin_path="$install_dir/custom-addons"
ynh_restore_file --origin_path="$install_dir/.local"

chmod -R o-rwx "$install_dir"
chown -R "$app:$app" "$install_dir"

ynh_restore_file --origin_path="$conf_file"
chmod 400 "$conf_file"
chown "$app:$app" "$conf_file"

#=================================================
# RESTORE THE POSTGRESQL DATABASE
#=================================================
ynh_script_progression --message="Restoring the PostgreSQL database..." --weight=1

# Make sure that its encoding is UTF-8
ynh_psql_execute_as_root --sql="update pg_database set encoding = pg_char_to_encoding('UTF8') where datname = '$db_name'"

# Restore the database contents
ynh_psql_connect_as --user="$db_user" --password="$db_pwd" --database="$db_name" < ./db.sql

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..." --weight=1

pushd "$install_dir"
    ynh_exec_warn_less ynh_exec_as "$app" \
        RUSTUP_HOME="$install_dir/.rustup" \
        CARGO_HOME="$install_dir/.cargo" \
        bash -c 'curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -q -y'

    export PATH="$PATH:$install_dir/.cargo/bin:$install_dir/.local/bin:/usr/local/sbin"

    if grep "python3" "$install_dir/$appname/$FORKNAME-bin" ; then
        python3 -m venv venv
        venv/bin/pip3 install --upgrade pip
        venv/bin/pip3 install wheel
        venv/bin/pip3 install -r "$appname/requirements.txt"
    else
        virtualenv venv
        venv/bin/pip3 install --upgrade pip
        venv/bin/pip install wheel
        venv/bin/pip install -r "$appname/requirements.txt"
    fi
    ynh_secure_remove --file="$install_dir/.cargo"
    ynh_secure_remove --file="$install_dir/.rustup"
popd

#=================================================
# RESTORE VARIOUS FILES
#=================================================
ynh_script_progression --message="Restoring various files..." --weight=1

ynh_restore_file --origin_path="/var/log/$app.log"
chown "$app:$app" "/var/log/$app.log"

#=================================================
# RESTORE SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Restoring system configurations related to $app..." --weight=1

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
systemctl enable "$app.service" --quiet
yunohost service add "$app" --log="/var/log/$app.log"

#=================================================
# RELOAD NGINX AND PHP-FPM OR THE APP SERVICE
#=================================================
ynh_script_progression --message="Reloading NGINX web server and $app's service..." --weight=1

ynh_systemd_action --service_name="$app" --action="start" --log_path="/var/log/$app.log"

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
